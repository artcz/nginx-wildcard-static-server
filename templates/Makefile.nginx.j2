# Set a special docker-compose file for all the operations
COMPOSE := docker compose -f docker-compose.nginx.yml

DATA_PATH=./data/certbot
SSL_NGINX_CONF_URL=https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf
SSL_DHPARAMS_URL=https://raw.githubusercontent.com/certbot/certbot/master/certbot/certbot/ssl-dhparams.pem

OVH_INI_PATH=/etc/letsencrypt/ovh.ini


random:
	"This is a first dummy target, so you don't accidentally run something :)"

nginx/recreate:
	$(COMPOSE) up --force-recreate -d nginx


certbot/renew:
	$(COMPOSE) run certbot renew
	$(COMPOSE) restart nginx


certbot/list:
	$(COMPOSE) run certbot certificates


certbot/init-staging: \
	certbot/check-if-dns-config-exists \
	certbot/download-initial-parameters \
	certbot/create-staging-certificate \
	nginx/recreate



certbot/check-if-dns-config-exists:
	@if [ ! -e $(FILE_TO_CHECK) ]; then \
        echo "Error: $(FILE_TO_CHECK) does not exist!"; \
        exit 1; \
    else \
        echo "$(FILE_TO_CHECK) exists. Doing nothing."; \
    fi

certbot/download-initial-parameters:
	@echo "### Downloading recommended TLS parameters ... "
	mkdir -p "$(DATA_PATH)/conf"
	curl -s $(SSL_NGINX_CONF_URL) > "$(DATA_PATH)/conf/options-ssl-nginx.conf"
	curl -s $(SSL_DHPARAMS_URL) > "$(DATA_PATH)/conf/ssl-dhparams.pem"


certbot/create-staging-certificate:
	# First regenerate the certificate
	$(COMPOSE) run certbot certonly \
		--staging \
		--dns-ovh \
		--dns-ovh-credentials $(OVH_INI_PATH) \
		--email "{{ letsencrypt_email }}" \
		-d "*.{{ domain_name }}" \
		-d "{{ domain_name }}" \
		--rsa-key-size "{{ letsencrypt_rsa_key_size }}" \
		--agree-tos \
		--no-eff-email \
		--force-renewal
	# And then restart nginx....
	$(COMPOSE) exec nginx nginx -s reload


certbot/upgrade-to-prod:
	# First regenerate the certificate
	$(COMPOSE) run certbot certonly \
		--dns-ovh \
		--dns-ovh-credentials $(OVH_INI_PATH) \
		--email "{{ letsencrypt_email }}" \
		-d "*.{{ domain_name }}" \
		-d "{{ domain_name }}" \
		--rsa-key-size "{{ letsencrypt_rsa_key_size }}" \
		--no-eff-email \
		--agree-tos \
		--force-renewal
	# And then restart nginx....
	$(COMPOSE) exec nginx nginx -s reload
